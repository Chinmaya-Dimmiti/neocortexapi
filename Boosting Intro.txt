Analyse and Describe Boosting Algorithm

1.Boosting
  The main idea behing boosting is the SDRs of symbols will use a wider range of cells by making the most active cells less active and the least active cells more active.
  This is done via scalar multiplication of a boosting matrix over the spatial pooler to change permeances of each cells.

First we need to understand Neocortex
Neocortex: 
It is like a sheet of napkin squeezed into a skull just below the dura matter of the skull consisting of all the areas required for cognition.To understand the basis of artificial general intelligence
we need to decipher the intelligence of neocortex.

It mainly consists of 6 steps
1. Sparse Distributed Representation
2. Encoding
3. Spatial Pooling
4. Learning
5. Boosting
6. Temporal Pooling

By using Spatial Pooling we will do the above 6 steps. So we need to get idea about Spatial Pooling

While going through the document I come to know about what exactly Spatial Poolong is

It is the layer that processes the Spatial features of the input data in HTM Algorithm.

Spatial Pooling Algorithm Important terms

1. Column
2. Mini-column
3. Inhibition
4. Inhinition radius
5. Active duty cycle
6. Overlap duty cycle
7. Receptive field 
8. Permanence value
9. Permanence threshold
10. Synapse

By following this resources I had learned more about Spatial Pooler and Boosting:

1. Boosting by HTM school youtube
    It is used to help to change the overlap score before the inhibition occurs giving leass active columns a better chance to express themselves

2. Hierarchal Temporal Memory by medium.com webpost

    The main idea is to understand the basic of artificial general intelligence we need to decrypt the intelligence of NeoCortex

As I already mentioned in the above that Neocortex mainly consists of 6 steps

The Human brain majorly consists of the cerebrum, the cerebellum, Limbic System and the Brain Stem. The cerebral cortex is divided into four sections, called “lobes”: the frontal lobe, parietal lobe, occipital lobe, and temporal lobe. Frontal Lobe is associated with reasoning, planning, parts of speech, movement, emotions, and problem solving, Parietal Lobe is associated with movement, orientation, recognition, perception of stimuli. Occipital Lobe is associated with visual processing and Temporal Lobe is associated with perception and recognition of auditory stimuli, memory, and speech. This cerebral cortex is also termed as the Neocortex(newer cortex) regarded as the most recently evolved part of the cortex.The cerebellum is associated with regulation and coordination of movement, posture, and balance. The limbic system, often referred to as the “emotional brain”, is found buried within the cerebrum. This system contains the thalamus, hypothalamus, amygdala, and hippocampus. Underneath the limbic system is the brain stem. This structure is responsible for basic vital life functions such as breathing, heartbeat, and blood pressure.So,the idea of newer intelligence comes from the Neocortex. Neocortex or the cerebrum is a sheet of napkin squeezed into a skull just below the dura matter of the skull consisting of all the lobes.

Vernon Mountcastle proposed a single powerful algorithm implemented by every region of cortex. If you connect regions of cortex together in a suitable hierarchy and provide a stream of input, it will learn about its environment. It’s quiet inside.The brain learns only by learnings, it has no knowledge of itself. To explain it in a simple way lets say that, both auditory cortex and visual cortex are unified by one algorithm. The surprising result is that the ferrets develop functioning visual pathways in the auditory portions of their brains. In other words, they see with brain tissue that normally hears sounds i.e the cortex does something universal that can be applied to any type of sensory or motor system. Similar experiments have been done with other senses and brain regions. For instance, pieces of rat visual cortex can be transplanted around the time of birth to regions where the sense of touch is usually represented. As the rat matures, the transplanted tissue processes touch rather than vision. Cells were not born to specialize in vision or touch or hearing. Human neocortex is every bit as plastic. Adults who are born deaf process visual information in areas that normally become auditory regions. Patterns are all the brain knows about. Brains are pattern machines. It’s not incorrect to express the brain’s functions in terms of hearing or vision, but at the most fundamental level, patterns are the name of the game. No matter how different the activities of various cortical areas may seem from each other, the same basic cortical algorithm is at work. Helen Keller had no sight and no hearing, yet she learned language and became a more skillful writer than most sighted and hearing people. Here was a very intelligent person without two of our main senses, yet the incredible flexibility of the brain allowed her to perceive and understand the world as individuals with all five senses do.

The basic principle of HTM (Hierarchical Temporal Memory)/CLA (Cortical Learning Algorithm) is Temporal Memory i.e the memory of sequences.

Let's see the 6 steps in detail

1.Sparse Distributed Representations: 

   SDRs are the language of brain. The reason why it is termed as Sparse is because of the fact that only few neurons fire when a cognitive task is performed i.e. if you take a snapshot of neurons in the brain,    it is highly likely that you will only see less than 2% neurons in an active state (Experimental evidence of Sparse firing in the neocortex). An SDR consists of thousands of bits where at any point in time a    small percentage of the bits are 1’s and the rest are 0’s. The bits in an SDR correspond to neurons in the brain, a 1 being a relatively active neuron and a 0 being a relatively inactive neuron.
There are certain properties of SDRs :
   1.Capacity of SDRs and the probability of mismatches
   2.Robustness of SDRs and the probability of error with noise
   3.Reliable classification of a list of SDR vectors
   4.Unions of SDRs
   5.Robustness of unions in the presence of noise

2.Encoder:

  The encoder converts the native format of the data into an SDR that can be fed into an HTM system. The encoder is responsible for determining which output bits should be ones, and which should be zeros, for a   given input value in such a way as to capture the important semantic characteristics of the data. Similar input values should produce highly overlapping SDRs.

3.Spatial Pooling:

  Spatial pooling Algorithm is for solving problems to represent the input active neurons (comping from sensory or motor organs) to make that the cortex learn the pattern of sequences. It accepts the input   vector of different sizes and represents it into sparse vectors of same size(It kind of normalises it). The output of the Spatial Pooler represents the mini columns i.e the pyramidal neuron in the cortices.   It posses certain properties like maintaining a fixed sparsity i.e no matter how many bits are on and off in the input the spatial pooler need to maintain the fixed sparsity and to maintain the overlap   properties i.e two similar inputs should produce similar outputs in the columns.
  The spatial pooler takes the input data and translates the incoming data into active columns

4.Learning:
  Learning happens only in those columns of the Spatial Pooler which are active. All the connections that are falling in the input space, the permeance value will increase for them i,e the synaptic connection   between them will strengthen while any connections that fall outside of the input space for those the permeance value will be decremented . Learning Spatial Pooler learns better in comparison to the Random   Spatial Pooler

5.Boosting:
 
  In order for a column in a Spatial pooler to exist it should be a winning column i.e the overlap score should be above some threshold value while non-winning columns are inhibited from learning. Only the    winner columns can update their permanence values. Boosting helps to change the overlap score before the inhibition occurs giving less active columns a better chance to express themselves and diminishing    columns that seem overactive

6.Temporal Pooling:

  Temporal Pooling enables us to understand the sequential pattern over time. It learns the sequences of the active column from the Spatial Pooler and predicts what spatial pattern in coming next based on the   temporal context of each input.

SpatialPooler.md - NeoCortexAPI Documentation from project
	Learning OutCome:
		Currently the project supports three versions of SP are implemented and considered:
			Spatial Pooler - single threaded original version without algorithm specific changes.
			SP-MT multithreaded version - which supports multiple cores on a single machine and
			SP-Parallel - which supports multicore and multimode calculus of spatial pooler.
		Steps to execute Spatial Pooler algorithm:
			1. Initialize Required Parameters using HtmConfig.
			2. Call Sp Compute Method to execute.
		The parameters used in HtmConfig are given Below
			POTENTIAL_RADIUS: Defines the radius in number of input cells visible to column cells. It is important to choose this value, so every input neuron is connected to at                         least a single column. For example, if the input has 50000 bits and the column topology is 500, then you must choose some value larger than 50000/500 > 100.
			POTENTIAL_PCT: Defines the percent of inputs withing potential radius, which can/should be connected to the column.
			GLOBAL_INHIBITION: If TRUE global inhibition algorithm will be used. If FALSE local inhibition algorithm will be used.
			INHIBITION_RADIUS: Defines neighbourhood radius of a column.
			LOCAL_AREA_DENSITY: Density of active columns inside of local inhibition radius. If set on value < 0, explicit number of active columns (NUM_ACTIVE_COLUMNS_PER_INH_AREA) will be used.
			NUM_ACTIVE_COLUMNS_PER_INH_AREA: An alternate way to control the density of the active columns. If this value is specified then LOCAL_AREA_DENSITY must be less than                         0, and vice versa.
			STIMULUS_THRESHOLD: One mini-column is active if its overlap exceeds overlap threshold  of connected synapses.
			SYN_PERM_INACTIVE_DEC: Decrement step of synapse permanence value withing every inactive cycle. It defines how fast the NeoCortex will forget learned patterns.
			SYN_PERM_ACTIVE_INC: Increment step of connected synapse during learning process
			SYN_PERM_CONNECTED: Defines Connected Permanence Threshold  , which is a float value, which must be exceeded to declare synapse as connected.
			DUTY_CYCLE_PERIOD: Number of iterations. The period used to calculate duty cycles. Higher values make it take longer to respond to changes in boost. Shorter values                         make it more unstable and likely to oscillate.
			MAX_BOOST: Maximum boost factor of a column.
		SpatialPooler Algorithm working apporach :
			1. Starting with an SDR with randomly dispersed connections from each column to the input space, the process begins.
			A random persistence value between 0 and 1 is assigned to each link between an input bit and an output column. 
			If the connected persistence threshold p set in the parameter initialization is larger than the connected permanence threshold p, 
			the input bits connected to the given column are active. If a particular amount of input bits associated to that column are activated in the input space, 
			that column will be active. With these connections, Spatial Pooler will be able to represent various inputs as SDRs while still preserving the input's semantic                         content.
			The overlap score of the output columns is used to determine how comparable the information is. The more overlap there is between the two outputs, the closer they                         are.
		    2. Only the columns with the highest overlap score will be selected as active and permitted to learn, 
		       while the remaining columns will remain unmodified. The active columns' connections that overlap the input will be strengthened by increasing the synaptic persistence                        value. 
			Meanwhile, the permanence value of other connections that do not match the input will be reduced.
		Boosting and Homeostatic plasticity controller:
			1.Normally, Spatial Pooler will only have a few active columns that represent distinct inputs, or their active duty-cycles will be near to one. 
			During the whole learning process, other inactive columns will never be active. This means that the output SDR can only explain a limited amount 
			of information about the input set. More columns will be able to participate in expressing the input space thanks to the boosting technique.
			2. The boosting approach of Spatial Pooler allows all columns to be used consistently across all patterns.
			Even though the columns have previously learnt patterns, the boosting process is still active, 
			causing the Spatial Pooler to forget the input. To address this issue, the Spatial Pooler now includes 
			a new homeostatic plasticity controller that turns off boosting once the learning has reached a stable state. 
			The output SDRs of the Spatial Pooler do not change over time, according to the research.










